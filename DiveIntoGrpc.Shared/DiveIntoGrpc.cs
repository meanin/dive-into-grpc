// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dive_into_grpc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from dive_into_grpc.proto</summary>
public static partial class DiveIntoGrpcReflection {

  #region Descriptor
  /// <summary>File descriptor for dive_into_grpc.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static DiveIntoGrpcReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChRkaXZlX2ludG9fZ3JwYy5wcm90byI3CgtEaXZlUmVxdWVzdBIPCgdob3dE",
          "ZWVwGAEgASgFEhcKD3dhdGVyVGVtcHJhdHVyZRgCIAEoBSIfCgxEaXZlUmVz",
          "cG9uc2USDwoHd2FzTmljZRgBIAEoCDIyCglHcnBjRGl2ZXISJQoERGl2ZRIM",
          "LkRpdmVSZXF1ZXN0Gg0uRGl2ZVJlc3BvbnNlIgBiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::DiveRequest), global::DiveRequest.Parser, new[]{ "HowDeep", "WaterTemprature" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DiveResponse), global::DiveResponse.Parser, new[]{ "WasNice" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class DiveRequest : pb::IMessage<DiveRequest> {
  private static readonly pb::MessageParser<DiveRequest> _parser = new pb::MessageParser<DiveRequest>(() => new DiveRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DiveRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DiveIntoGrpcReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DiveRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DiveRequest(DiveRequest other) : this() {
    howDeep_ = other.howDeep_;
    waterTemprature_ = other.waterTemprature_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DiveRequest Clone() {
    return new DiveRequest(this);
  }

  /// <summary>Field number for the "howDeep" field.</summary>
  public const int HowDeepFieldNumber = 1;
  private int howDeep_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int HowDeep {
    get { return howDeep_; }
    set {
      howDeep_ = value;
    }
  }

  /// <summary>Field number for the "waterTemprature" field.</summary>
  public const int WaterTempratureFieldNumber = 2;
  private int waterTemprature_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int WaterTemprature {
    get { return waterTemprature_; }
    set {
      waterTemprature_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DiveRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DiveRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HowDeep != other.HowDeep) return false;
    if (WaterTemprature != other.WaterTemprature) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HowDeep != 0) hash ^= HowDeep.GetHashCode();
    if (WaterTemprature != 0) hash ^= WaterTemprature.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HowDeep != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(HowDeep);
    }
    if (WaterTemprature != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(WaterTemprature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HowDeep != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(HowDeep);
    }
    if (WaterTemprature != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(WaterTemprature);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DiveRequest other) {
    if (other == null) {
      return;
    }
    if (other.HowDeep != 0) {
      HowDeep = other.HowDeep;
    }
    if (other.WaterTemprature != 0) {
      WaterTemprature = other.WaterTemprature;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          HowDeep = input.ReadInt32();
          break;
        }
        case 16: {
          WaterTemprature = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class DiveResponse : pb::IMessage<DiveResponse> {
  private static readonly pb::MessageParser<DiveResponse> _parser = new pb::MessageParser<DiveResponse>(() => new DiveResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DiveResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DiveIntoGrpcReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DiveResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DiveResponse(DiveResponse other) : this() {
    wasNice_ = other.wasNice_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DiveResponse Clone() {
    return new DiveResponse(this);
  }

  /// <summary>Field number for the "wasNice" field.</summary>
  public const int WasNiceFieldNumber = 1;
  private bool wasNice_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool WasNice {
    get { return wasNice_; }
    set {
      wasNice_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DiveResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DiveResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (WasNice != other.WasNice) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (WasNice != false) hash ^= WasNice.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (WasNice != false) {
      output.WriteRawTag(8);
      output.WriteBool(WasNice);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (WasNice != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DiveResponse other) {
    if (other == null) {
      return;
    }
    if (other.WasNice != false) {
      WasNice = other.WasNice;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          WasNice = input.ReadBool();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
